# INFO
python -mwebbrowser http://localhost:8983/solr/#/SITE
python -mwebbrowser http://localhost:4444/grid/console
python -mwebbrowser http://localhost:1080
python -mwebbrowser http://localhost:8088

# get container name
docker ps --format {{.Names}} | grep php

# <CONTAINER> bash
docker exec -i $(docker ps --format {{.Names}} | grep php) bash

# drush ULI
docker exec -i $(docker ps --format {{.Names}} | grep php) drush uli 1

# redis clearcache
docker exec -i $(docker ps --format {{.Names}} | grep redis) redis-cli flushall

# open mailcatcher
python -mwebbrowser http://localhost:1080


# get container name
docker ps --format {{.Names}} | grep php

# STOP ALL running containers
docker stop $(docker ps -q)

# \<CONTAINER\> bash
docker exec -it $(docker ps --format {{.Names}} | grep php) bash

# Monitor APP sync
docker exec -i $(docker ps --format {{.Names}} | grep app_1) tail -f /var/log/unison.log

# drush ULI
docker exec -i $(docker ps --format {{.Names}} | grep php) drush -l http://docker.dev uli 1
# docker exec -i $(docker ps --format {{.Names}} | grep php) drush uli 1
# drush clear cache

docker exec -i $(docker ps --format {{.Names}} | grep php) drush cc all
# multisite drush -> args :multi
docker exec -i $(docker ps --format {{.Names}} | grep php) drush -l http://docker.dev uli 1

# redis clearcache
docker exec -i $(docker ps --format {{.Names}} | grep redis) redis-cli flushall

# open mailcatcher
python -mwebbrowser http://localhost:1080

# launch ??
python -mwebbrowser http://docker.dev

# mysql log
docker exec -i $(docker ps --format {{.Names}} | grep db) tail -f /var/log/mysql/mysql.log

# Nginx log :error
docker exec -i $(docker ps --format {{.Names}} | grep nginx) tail -f /var/log/nginx/app-error.log

# Nginx RELOAD
docker exec -i $(docker ps --format {{.Names}} | grep nginx) nginx -s reload

# SCREEN into HYVE
screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty

# CLEAR nginx pagespeed cache
dockerdrupal exec -s nginx -c "rm -rf /var/ngx_pagespeed_cache/*"

# backup before restore

cd project_folder && dockerdrupal start && docker exec -i $(docker ps --format {{.Names}} | grep db) mysqldump -u root -ppassword dev_db > dev_db.sql && dockerdrupal stop && cd ../
